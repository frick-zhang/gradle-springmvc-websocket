apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8   // 设置 JDK 版本
webAppDirName = 'WebContent'    // 设置 WebApp 根目录
// 设置 Java 源码所在目录
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    mybatisGenerator
}

// 读取config文件夹中对应的配置文件
ext{
    def prop = new Properties();
    file("src/main/resources/org/gradle/jdbc-mysql.properties")
    .withInputStream {
        prop.load(it)
    }
    file("src/main/resources/org/gradle/gradle.properties")
    .withInputStream {
        prop.load(it)
    }
    prop.each {
        project.extensions.add("$it.key",it.value);
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

String springVersion = '4.1.6.RELEASE'

/*configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.springframework') {
			details.useVersion springVersion
		}
	}
}*/

dependencies {

	//core spring
	compile ('org.springframework:spring-context:' + springVersion)
	compile ('org.springframework:spring-core:' + springVersion)
	compile ('org.springframework:spring-webmvc:' + springVersion)
	compile ('org.springframework:spring-web:' + springVersion)

	//aspects
	compile 'org.aspectj:aspectjrt:1.8.2'
	compile 'org.aspectj:aspectjweaver:1.8.2'

	//logging
	compile ('log4j:log4j:1.2.17')
	
	//fileupload
	compile 'commons-fileupload:commons-fileupload:1.3'
	compile 'commons-logging:commons-logging:1.2'

	//json
	compile 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
	compile 'com.fasterxml.jackson.core:jackson-core:2.2.3'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.3'

	//db access
	compile 'org.springframework:spring-jdbc:' + springVersion
	compile 'org.springframework:spring-orm:' + springVersion
	compile 'org.springframework.data:spring-data-jpa:1.7.0.RELEASE'
	compile 'org.apache.tomcat:tomcat-jdbc:8.0.9'
	compile 'org.hsqldb:hsqldb:2.3.2'


	//Servlet
    compile 'javax.servlet:jstl:1.2'
    compile 'taglibs:standard:1.1.2'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.websocket:javax.websocket-api:1.0'

	//testing
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile "org.mockito:mockito-all:1.9.0"
	testCompile "org.hamcrest:hamcrest-core:1.3"
	testCompile("org.spockframework:spock-core:0.7-groovy-2.0") {
		exclude group: 'org.codehaus.groovy', module: 'groovy-all'
	}
	testRuntime("org.spockframework:spock-spring:0.7-groovy-2.0") {
		exclude group: 'org.spockframework', module: 'spock-core'
	}
	testRuntime "cglib:cglib-nodep:2.2.2"
	testRuntime "org.objenesis:objenesis:1.2"
	testCompile 'org.springframework:spring-test:' + springVersion
	testRuntime 'com.jayway.jsonpath:json-path:0.8.1'
	
	compile group: 'org.apache.ibatis', name: 'ibatis-core', version: '3.0'
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.38'
}


war {
	baseName = 'GradleSpringMVC'
}

test {
	testLogging {
	events "passed", "skipped", "failed"
	}
}

task mybatisGenerate << {
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = project['jdbc.driverClassName']
    ant.properties['connectionURL'] = project['jdbc.url']
    ant.properties['userId'] = project['jdbc.user']
    ant.properties['password'] = project['jdbc.pass']
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = project['modelPackage']
    ant.properties['mapperPackage'] = project['mapperPackage']
    ant.properties['sqlMapperPackage'] = project['sqlMapperPackage']

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: '${basedir}/src/main/resources/generatorConfig.xml',
            verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}